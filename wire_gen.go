// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"github.com/wx-up/go-book/internal/repository"
	"github.com/wx-up/go-book/internal/repository/cache"
	"github.com/wx-up/go-book/internal/service/code"
	"github.com/wx-up/go-book/internal/web"
	"github.com/wx-up/go-book/ioc"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitWebService() *gin.Engine {
	cmdable := ioc.CreateRedis()
	handler := ioc.CreateJwtHandler(cmdable)
	v := ioc.CreateMiddlewares(handler)
	db := ioc.CreateMysql()
	userDAO := ioc.CreateUserDao(db)
	userCache := cache.NewRedisUserCache(cmdable)
	userRepository := repository.NewCacheUserRepository(userDAO, userCache)
	userService := ioc.CreateUserService(userRepository)
	service := ioc.CreateSMSService()
	codeCache := cache.NewRedisCodeCache(cmdable)
	codeRepository := repository.NewCacheCodeRepository(codeCache)
	codeService := code.NewSmsCodeService(service, codeRepository)
	userHandler := web.NewUserHandler(userService, codeService, cmdable, handler)
	wechatService := ioc.CreateOAuth2WechatService()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(wechatService, userService, handler)
	engine := ioc.InitWeb(v, userHandler, oAuth2WechatHandler)
	return engine
}
